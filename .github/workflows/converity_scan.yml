name: Coverity Scan
on: [push]
env:
    DOCKER_REPO: fsquirrel
    DOCKER_IMAGE: concord-bft
    DOCKER_WORK_DIR: /concord-bft
    DOCKER_IMAGE_VER: 0.3
    COVERITY_SCAN_TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
    CMAKE_CXX_FLAGS: "-DCMAKE_CXX_FLAGS_RELEASE=-O3 -g"
    USE_LOG4CPP: -DUSE_LOG4CPP=TRUE
    USE_ROCKSDB: -DBUILD_ROCKSDB_STORAGE=TRUE
    USE_CONAN: -DUSE_CONAN=OFF
    USE_S3_OBJECT_STORE: -DUSE_S3_OBJECT_STORE=ON

jobs:
  build:
    name: Coverity Scan
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            compiler:
                - "CC=clang CXX=clang++"
            ci_build_type:
                - "-DCMAKE_BUILD_TYPE=RELEASE -DCI_TEST_STORAGE_TYPE=v1direct"
                - "-DCMAKE_BUILD_TYPE=RELEASE -DCI_TEST_STORAGE_TYPE=v2merkle"
    steps:
        - name: Pull docker image
          run: docker pull ${{ env.DOCKER_REPO }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_VER }}
        - name: Checkout
          uses: actions/checkout@v2
        - name: Download coverity
          run: |
            wget -q https://scan.coverity.com/download/linux64 --post-data "token=$COVERITY_SCAN_TOKEN&project=fconcord-bft" -O coverity_tool.tgz
            mkdir coverity_tool && tar xf coverity_tool.tgz -C coverity_tool --strip-components=1
        - name: Coverity scan
          run: >
            docker run --rm --privileged=true
            --cap-add NET_ADMIN --cap-add=SYS_PTRACE --ulimit core=-1
            --workdir=${{ env.DOCKER_WORK_DIR }} --name=${{ env.DOCKER_IMAGE }}
            --mount type=bind,source=${PWD},target=${{ env.DOCKER_WORK_DIR }}
            ${{ env.DOCKER_REPO }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_VER }}
            /bin/bash -c "mkdir coverityBuild && cd coverityBuild &&
            ${{ matrix.compiler }}
            cmake ${{ env.CMAKE_CXX_FLAGS }}
            ${{ matrix.ci_build_type }}
            ${{ env.USE_LOG4CPP }}
            ${{ env.USE_ROCKSDB }}
            ${{ env.USE_CONAN }}
            ${{ env.USE_S3_OBJECT_STORE }} .. &&
            ../coverity_tool/bin/cov-build --dir cov-int make;
            tar czvf cov-int.tgz cov-int;"
        - name: Upload coverity results
          run: >
            curl --form token=$COVERITY_SCAN_TOKEN
            --form email=""
            --form file=@coverityBuild/cov-int.tgz
            --form version="master"
            --form description="ddanilov@vmware.com"
            https://scan.coverity.com/builds?project=fconcord-bft
        - name: Prepare artifacts
          if: failure()
          run: |
            ls -lh ${{ github.workspace }}/artifact/cores
            sudo chown -R $USER:$GROUP ${{ github.workspace }}/artifact/
        - name: Upload artifacts
          uses: actions/upload-artifact@v2
          if: failure()
          with:
            name: artifacts-${{ matrix.compiler }}-${{ matrix.ci_build_type }}
            path: ${{ github.workspace }}/artifact/
